<body class="hold-transition sidebar-mini">
<div class="wrapper">
  <!-- Navbar -->
  <nav class="main-header navbar navbar-expand navbar-white navbar-light">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
      </li>
    </ul>
  </nav>
  <!-- /.navbar -->

  <!-- Main Sidebar Container -->
  <aside class="main-sidebar sidebar-dark-primary elevation-4">
    <!-- Brand Logo -->
    <a href="/" class="brand-link">
      <img src="https://i.imgur.com/euLn4Te.png" alt=" Logo" class="brand-image img-circle elevation-3" style="opacity: .8">
      <span class="brand-text font-weight-light">The Eye of Horus</span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">
      <!-- Sidebar Menu -->
      <nav class="mt-2">
        <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
          <!-- Add icons to the links using the .nav-icon class
               with font-awesome or any other icon font library -->
          <li class="nav-item">
            <a href="/dashboards" class="nav-link active">
              <i class="nav-icon fas fa-tachometer-alt"></i>
              <p>
                Dashboard
              </p>
            </a>
          </li>
          <li class="nav-item">
            <a href="/profile" class="nav-link">
              <i class="nav-icon fa fa-user"></i>
              <p>
                Profile
              </p>
            </a>
          </li>
        </ul>
      </nav>
      <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
  </aside>

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <div class="container-fluid">
        <div class="mx-5 d-flex justify-content-between">
          <div class="d-flex align-items-center">
            <h1>dashboard_A</h1>
            <a class="text-secondary ml-3" href="/dashboard/:id/setting"><i class="fas fa-cog"></i></a>
          </div>
          <div class="d-flex justify-content-end">
              <a href="/dashboards/1/create"><button class="btn btn-info"><i class="fas fa-plus"></i></button></a>
          </div>
        </div>
      </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
      <div class="container-fluid">
        <div class="card-wrapper d-flex flex-wrap ml-5">
          {{#each chart}}
          <div class="card m-3 {{this.id}}" style="width: 40%; height: 50vh"></div>
          <a href="/dashboards/{{this.dashboardId}}/chart/{{this.id}}" class="btn btn-success mt-3" style="height: 4vh; line-height:100%">edit</a>
          <script>
          async function chart() {
            console.log('here{{this.id}}')
            const response = await axios.post('/dashboards/chart/preview',{ 
                timeRange: '{{this.time_range}}',
                source: '{{this.database}}/{{this.measurement}}',
                style: '{{this.chart_type}}',
                interval: '{{this.interval}}',
                interval_unit: '{{this.interval_unit}}',
                select: '{{this.select}}'
              });
            console.log('{{this.id}}:', response)
            const chart = $('.{{this.id}}')[0]
            const result = response.data.data
            const select = response.data.select + '_value'
            const rangeIntoSec = ('{{this.time_range}}'.split('-')[0] * units['{{this.time_range}}'.split('-')[1]])*1000;
            const data = []
            for(let i = 0; i < result.length; i ++){
              const trace = {
                x: result[i].rows.map(row => row.time),
                y: result[i].rows.map(row => row[select]),
                type: $('#style').val(),
                name: result[i].tags.type_instance,
                connectgaps: true
              }
              data.push(trace)
            }

            var layout = JSON.parse('{{{this.layout}}}')

            Plotly.newPlot(chart, data, layout);
          }
          
          {{!-- function chart{{this.id}}() {
              chart();
              setTimeout(function() {
                  chart{{this.id}}();
              }, {{{this.setInterval}}});
          }

          chart{{this.id}}(); --}}
          chart()
          setInterval(chart, {{{this.setInterval}}})
          </script>
          {{/each}}
        </div>
      </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
  </div>
  <!-- /.content-wrapper -->
  <footer class="main-footer">
    <strong>Copyright &copy; 2022 &nbsp;</strong> All rights reserved.
  </footer>
</div>
<!-- ./wrapper -->
</body>
<script>
  const units = {
            s: 1,
            m: 60,
            h: 60 * 60,
            d: 24 * 60 * 60,
            M: 30 * 24 * 60 * 60,
            y: 365 * 30 * 24 * 60 * 60,
          };
  $('.nav-item').on('click',(e) => {
    if (e.target.tagName === "A"){
      for(let i = 0; i < e.target.parentElement.parentElement.childElementCount; i++){
      e.target.parentElement.parentElement.children[i].children[0].classList.remove('active')
      }
      e.target.classList.add("active");
    } else if (e.target.tagName === "I" || e.target.tagName === "P" ){
      for(let i = 0; i < e.target.parentElement.parentElement.parentElement.childElementCount; i++){
      e.target.parentElement.parentElement.parentElement.children[i].children[0].classList.remove('active')
      }
      e.target.parentElement.classList.add("active");
    }
  })
</script>