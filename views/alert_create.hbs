<body class="hold-transition sidebar-mini">
<div class="wrapper">
  <!-- Navbar -->
  <nav class="main-header navbar navbar-expand navbar-dark d-flex justify-content-between">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
      </li>
    </ul>
    <div class="d-flex align-items-center">
      <div class="hi">Hi, {{localUser.name}}{{#ifCond localUser.superuser '1'}} (Superuser){{/ifCond}}</div>
      <a href="/profile" class="nav-link" id="profile">Profile</a>
      <form action="/logout" method="post">
        <button type="submit" class="signout">Sign out</button>
      </form>
    </div>
  </nav>
  <!-- /.navbar -->

  <!-- Main Sidebar Container -->
  <aside class="main-sidebar sidebar-dark-primary elevation-2">
    <!-- Brand Logo -->
    <a href="/" class="brand-link">
      <img src="/eye.PNG" alt=" Logo" class="brand-image img-circle elevation-3">
      <span class="brand-text font-weight-light">The Eye of Horus</span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">
      <!-- Sidebar Menu -->
      <nav class="mt-2">
        <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
          <!-- Add icons to the links using the .nav-icon class
               with font-awesome or any other icon font library -->
          <li class="nav-item">
            <a href="/dashboards" class="nav-link">
              <i class="nav-icon fas fa-tachometer-alt"></i>
              <p>
                Dashboard
              </p>
            </a>
          </li>
          <li class="nav-item" >
            <a href="/alerts" class="nav-link select">
              <i class="nav-icon fas fa-bell"></i>
              <p>
                Alert
              </p>
            </a>
          </li>
          <li class="nav-item">
            <a href="/receivers" class="nav-link">
              <i class="nav-icon fas fa-envelope"></i>
              <p>
                Receiver
              </p>
            </a>
          </li>
          <li class="nav-item">
            <a href="/profile" class="nav-link">
              <i class="nav-icon fa fa-user"></i>
              <p>
                Profile
              </p>
            </a>
          </li>
          {{#ifCond localUser.superuser '1'}}
          <li class="nav-item">
            <a href="/admin/users" class="nav-link">
              <i class="nav-icon fa fa-users"></i>
              <p>
                Users
              </p>
            </a>
          </li>
          <li class="nav-item">
            <a href="/admin/roles" class="nav-link">
              <i class="nav-icon fa fa-user-tag"></i>
              <p>
                Roles
              </p>
            </a>
          </li>
          {{/ifCond}}
        </ul>
      </nav>
      <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
  </aside>

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper bg-dark">
    <!-- Main content -->
    <section class="content">
      <div class="container-fluid">
        {{#if error_messages}}
        <div class="alert alert-danger" role="alert" style="opacity: 0.8;">
          {{error_messages}}
        </div>
        {{/if}}
        <form {{#if data}} action="/alerts/{{data.id}}?_method=PUT" {{else}} action="/alerts" {{/if}} method="post">
          <div class="row">
            <div class="col-12 mt-2 mb-5">
              <div class="d-flex justify-content-between mr-5 mb-3">
                  <div class="d-flex mx-5">
                    
                  </div>
              </div>
              <div class="card m-auto" style="width: 90%; background: #343A40">
                <!-- /.card-header -->
                <div class="card-body table-responsive p-1 d-flex justify-content-center" style="height: 50vh;">
                  <div class="chart"></div>
                </div>
                <!-- /.card-body -->
              </div>
              <div class="row mt-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="source" class="d-flex align-items-center" >Source</label>
                </div>  
                <div class="col-2 p-0 mr-5">
                  <select class="form-control" id="source" style="background: #343A40; color:white" name="source">              
                    {{#if data}}
                      {{#each source}}
                      <option value="{{this}}" {{#ifCond this ../data.source }}selected{{/ifCond}}>{{this}}</option>
                      {{/each}}
                    {{else}}
                      {{#each source}}
                      <option value="{{this}}">{{this}}</option>
                      {{/each}}
                    {{/if}}
                  </select>
                </div>
                <div class="col-2 p-0">
                  <label for="type" class="d-flex align-items-center" >Type instance</label>
                </div>  
                <div class="col-2 p-0 mr-5">
                  <select class="form-control" id="type" style="background: #343A40; color:white" name="type">
                    {{#if data}}
                      {{#each type}}
                        <option value="{{this}}" {{#ifCond this ../data.type }}selected{{/ifCond}}>{{this}}</option>
                      {{/each}}
                    {{/if}}
                  </select>
                </div>
              </div>
              <div class="row my-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="style" class="d-flex align-items-center">Style</label>
                </div>
                <div class="col-2 p-0 mr-5">
                  <select class="form-control" id="style" style="background: #343A40; color:white">
                    <option value="line">line chart</option>
                    <option value="bar">bar chart</option>
                  </select>
                </div>
                <div class="col-2 p-0">
                  <label for="interval" class="d-flex align-items-center" >Interval</label>
                </div>
                <div class="col-2 p-0 mr-5">
                  <input class="form-control" type="number" min="1" style="background: #343A40; color:white" id="interval" value="10">
                </div>
                <div class="col-2 p-0">
                  <select class="form-control" style="background: #343A40; color:white" id="interval_unit">
                    <option value="s">second</option>
                    <option value="m">minute</option>
                    <option value="h">hour</option>
                    <option value="d">day</option>
                    <option value="w">week</option>
                  </select>
                </div>
              </div>
              <div class="row my-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="time-range" class="d-flex align-items-center">Time range</label>
                </div>
                <div class="col-2 p-0" style="margin-right: 40vw;">
                  <select class="form-control" id="time-range" style="background: #343A40; color:white">
                        <option value="5-m">Last 5 minutes</option>
                        <option value="15-m">Last 15 minutes</option>
                        <option value="30-m">Last 30 minutes</option>
                        <option value="1-h">Last 1 hour</option>
                        <option value="3-h">Last 3 hour</option>
                        <option value="6-h">Last 6 hour</option>
                        <option value="12-h">Last 12 hour</option>
                        <option value="24-h">Last 24 hour</option>
                        <option value="2-d">Last 2 days</option>
                        <option value="7-d">Last 7 days</option>
                        <option value="30-d">Last 30 days</option>
                        <option value="90-d">Last 90 days</option>
                        <option value="6-M">Last 6 months</option>
                        <option value="1-y">Last 1 year</option>
                        <option value="2-y">Last 2 years</option>
                        <option value="5-y">Last 5 years</option>
                  </select>
                </div>
                <div>
                  <div class="btn mr-2" style="background-color:#59573C; color:#C2C7D0" id="preview">Preview chart</div>
                </div>
              </div>
              <div class="d-flex justify-content-center my-5" >
                <div style="height: 1px; background-color: #C2C7D0; width:95%"></div>
              </div>
              <div class="row mt-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="name" class="d-flex align-items-center">Name</label>
                </div>
                <div class="col-2 p-0">
                  <input class="form-control" type="text" id="name" placeholder="Name" name="name" style="background: #343A40; color:white" value="{{data.name}}" required>
                </div>
              </div>
              <div class="row mt-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="select" class="d-flex align-items-center">When</label>
                </div>
                <div class="col-2 p-0">
                  <select class="form-control" id="select" style="background: #343A40; color:white;" name="select" id="select">
                    <option value="min" {{#ifCond data.select 'min'}}selected{{/ifCond}}>min</option>
                    <option value="max" {{#ifCond data.select 'max'}}selected{{/ifCond}}>max</option>
                    <option value="mean" {{#ifCond data.select 'mean'}}selected{{/ifCond}}>mean</option>
                    <option value="sum" {{#ifCond data.select 'sum'}}selected{{/ifCond}}>sum</option>
                    <option value="count" {{#ifCond data.select 'count'}}selected{{/ifCond}}>count</option>
                  </select>
                </div>
                <div class="col-2 p-0 mx-3">
                  <select class="form-control" id="condition" style="width: 13vw; background: #343A40; color:white;" name="condition">
                    <option value="1" {{#ifCond data.condition '1'}}selected{{/ifCond}}>GREATER THAN  ">"</option>
                    <option value="2" {{#ifCond data.condition '2'}}selected{{/ifCond}}>LESS THAN  "<"</option>
                    <option value="3" {{#ifCond data.condition '3'}}selected{{/ifCond}}>IS OUTSIDE</option>
                    <option value="4" {{#ifCond data.condition '4'}}selected{{/ifCond}}>IS BETWEEN</option>
                    <option value="5" {{#ifCond data.condition '5'}}selected{{/ifCond}}>HAS NO VALUE</option>
                  </select>
                </div>
                <div class="col-2 p-0 mr-5">
                  <div id="value">
                    <div class="d-flex" >
                      <input class="form-control" type="number" id="value_min" style="background: #343A40; color:white" name="value" value="{{data.value}}">
                    </div>
                  </div>
                </div> 
                  <div class="d-none col-2" >
                    <div class="d-flex">         
                      <label for="value_max" class="d-flex align-items-center" style="margin:0 15px 0 -40px">to</label>
                      <input class="form-control" type="number" style="background: #343A40; color:white" id="value_max" name="value_max" value="{{data.value_max}}">
                    </div>     
                  </div>
              </div>
              <div class="row mt-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="eval-every-input" class="d-flex align-items-center">Evaluate every</label>
                </div>
                <div class="col-2 p-0 mr-5">
                  <select class="form-control" id="eval-every-input" style="background: #343A40; color:white;" name="eval_every_input">
                    <option value="1m" {{#ifCond data.eval_every_input '1m'}}selected{{/ifCond}}>1m</option>
                    <option value="5m" {{#ifCond data.eval_every_input '5m'}}selected{{/ifCond}}>5m</option>
                    <option value="10m" {{#ifCond data.eval_every_input '10m'}}selected{{/ifCond}}>10m</option>
                    <option value="30m" {{#ifCond data.eval_every_input '30m'}}selected{{/ifCond}}>30m</option>
                    <option value="1h" {{#ifCond data.eval_every_input '1h'}}selected{{/ifCond}}>1h</option>
                    <option value="3h" {{#ifCond data.eval_every_input '3h'}}selected{{/ifCond}}>3h</option>
                    <option value="5h" {{#ifCond data.eval_every_input '6h'}}selected{{/ifCond}}>6h</option>
                    <option value="12h" {{#ifCond data.eval_every_input '12h'}}selected{{/ifCond}}>12h</option>
                    <option value="18h" {{#ifCond data.eval_every_input '18h'}}selected{{/ifCond}}>18h</option>
                    <option value="1d" {{#ifCond data.eval_every_input '1d'}}selected{{/ifCond}}>1d</option>
                    <option value="3d" {{#ifCond data.eval_every_input '3d'}}selected{{/ifCond}}>3d</option>
                    <option value="1w" {{#ifCond data.eval_every_input '1w'}}selected{{/ifCond}}>1w</option>
                    <option value="1M" {{#ifCond data.eval_every_input '1M'}}selected{{/ifCond}}>1M</option>
                    <option value="3M" {{#ifCond data.eval_every_input '3M'}}selected{{/ifCond}}>3M</option>
                    <option value="6M" {{#ifCond data.eval_every_input '6M'}}selected{{/ifCond}}>6M</option>
                    <option value="1y" {{#ifCond data.eval_every_input '1y'}}selected{{/ifCond}}>1y</option>
                    <option value="2y" {{#ifCond data.eval_every_input '2y'}}selected{{/ifCond}}>2y</option>
                  </select>
                </div>
                <div class="col-1 p-0">
                  <div>for</div>
                </div>
                <div class="col-2 p-0" style="margin-left: -30px;">
                  <input class="form-control" type="text" style="background: #343A40; color:white" id="eval-for-input" name="eval_for_input" {{#if data}}value="{{data.eval_for_input}}"{{else}}value="5m"{{/if}}>
                </div>
              </div>
              <div class="p-3 d-none" style="margin: 3vh 5vw 0 5vw; background-color:#4b535a; color:#bec4ca" id="warning"><i class="fas fa-exclamation-triangle text-warning mr-3"></i>Setting a "for" duration that is less than or equal to the evaluation interval will result in the evaluation interval being used to calculate when an alert that has stopped receiving data will be closed.</div>
              <div class="row mt-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="receiver_id" class="d-flex align-items-center">Receiver</label>
                </div>
                <div class="col-2 p-0">
                  <select class="form-control" id="receiver_id" style="background: #343A40; color:white;" name="receiver_id">
                    {{#if data}}
                      {{#each receiver}}
                        <option value="{{this.id}}" {{#ifCond this.id ../data.receiver_id }}selected{{/ifCond}}>{{this.name}} / {{this.type}}</option>
                      {{/each}}
                    {{else}}
                      {{#each receiver}}
                        <option value="{{this.id}}">{{this.name}} / {{this.type}}</option>
                      {{/each}}
                    {{/if}}
                  </select>
                </div>
              </div>
              <div class="row mt-3 ml-5 align-items-center">
                <div class="col-2 p-0">
                  <label for="message" class="d-flex align-items-center">Alert message</label>
                </div>
                <div class="col-2 p-0">
                  <textarea class="form-control" name="message" id="message" cols="30" rows="3" style="background-color:#4b535a; color:#e9ecee" required>{{data.message}}</textarea>
                </div>
              </div>
              <div class="d-flex justify-content-end"><button type="submit" class="btn mr-5 buttons" id="save">SAVE</button></div>             
            </div>
          </div>
        </form>
      </div>
    </section>
    <!-- /.content -->
  </div>
  <!-- /.content-wrapper -->
  <footer class="main-footer bg-dark">
    <strong>Copyright &copy; 2022 The Eye of Horus&nbsp;</strong> All rights reserved.
  </footer>
</div>
<!-- ./wrapper -->
</body>
<script>
  const preview = $('#preview')
  const timeRange = $('#time-range')
  const source = $('#source')
  const type = $('#type')
  const interval = $('#interval')
  const interval_unit = $('#interval_unit')
  const selects = $('#select')
  const charts = $('.chart')
  const style = $('#style')
  const save = $('#save')

  async function loading() {
    const sourceVal = source.val()
    const response = await axios.post('/dashboards/type_instance',{ source: sourceVal })
    let option = ''
    for(let i = 0; i < response.data.length; i++) {
      option += `<option value="${response.data[i]}">${response.data[i]}</option>`
    }
    type.html(option)
  }
  loading()

  preview.on('click', async (e) => {
    try{
      const response = await axios.post('/alerts/chart/preview',{ 
          timeRange: timeRange.val(),
          source: source.val(),
          type: type.val(),
          style: '',
          interval: interval.val(),
          interval_unit: interval_unit.val(),
          select: selects.val()
        });
      
      const chart = charts[0]
      const result = response.data.data
      const select = response.data.select + '_value'

      const trace = {
        x: result.map(item => {
          const timeStr = new Date(item.time).toLocaleString('en-GB').split(', ')
          const date = timeStr[0].split('/')
          const time = timeStr[1].split(':')
          return new Date(date[2],date[1],date[0],time[0],time[1],time[2])
          }),
        y: result.map(item => item[select]),
        type: style.val(),
        connectgaps: true
      }

      var layout = {
        titlefont: { color: '#FFF' },
          xaxis: {
            tickfont: { color: '#FFF'  }
          },
          yaxis: {
            tickfont: { color: '#FFF' }
          }, 
        paper_bgcolor: 'rgb(52,58,64)',
        plot_bgcolor: 'rgba(0,0,0,0)',
        legend: { font: { color: '#FFF' } },
      };

      Plotly.newPlot(chart, [trace], layout);
    } catch (error){
      toastr.error('Interval should be positive integer')
    }
  })

  const condition = $('#condition')
  const value = $('#value')
  const value_min = $('#value_min')
  const value_max = $('#value_max')

  if (condition.val() === '5'){
    value[0].classList.add('d-none')
  } else if (condition.val() === '1' || condition.val() === '2') {
     value_min.prop('required',true)
  } else if (condition.val() === '3' || condition.val() === '4') {
    value_min.prop('required',true)
    value_max.prop('required',true)
  }

  condition.change((e) => {
    if (e.currentTarget.value === '3' || e.currentTarget.value === '4'){
      e.currentTarget.parentElement.parentElement.lastElementChild.classList.remove("d-none")
      value[0].classList.remove('d-none')
      value_max.prop('required',true)
      value_min.prop('required',true)
    } else if (e.currentTarget.value === '5') {
      value[0].classList.add('d-none')
      e.currentTarget.parentElement.parentElement.lastElementChild.classList.add("d-none")
      value_max.val(null)
      value_min.val(null)
      value_max.prop('required',false)
      value_min.prop('required',false)
    } else {
      e.currentTarget.parentElement.parentElement.lastElementChild.classList.add("d-none")
      value[0].classList.remove('d-none')
      value_min.prop('required',true)
      value_max.val(null)
      value_max.prop('required',false)
      
    }
  })

  const timeUnits = {
  's': 1,
  'm': 60,
  'h': 60 * 60,
  'd': 24 * 60 * 60,
  'M': 30 * 24 * 60 * 60,
  'y': 365 * 30 * 24 * 60 * 60,
  }

  const eval_every_input = $('#eval-every-input')
  const eval_for_input = $('#eval-for-input')
  const warning = $('#warning')
  const sources = $('#source')
  const format = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/;

  
  eval_every_input.change((e) => {
    const evalEveryInput = eval_every_input.val().match(/[a-zA-Z]+|[0-9]+/g)
    const evalForInput = eval_for_input.val().match(/[a-zA-Z]+|[0-9]+/g)
    const everyValue = evalEveryInput[0] * timeUnits[evalEveryInput[1]]
    const forValue = evalForInput[0] * timeUnits[evalForInput[1]]
    if (forValue < everyValue){
      warning[0].classList.remove("d-none")
    } else {
      warning[0].classList.add("d-none")
    }
  })

  eval_for_input.change((e) => {
    const evalEveryInput = eval_every_input.val().match(/[a-zA-Z]+|[0-9]+/g)
    const evalForInput = eval_for_input.val().match(/[a-zA-Z]+|[0-9]+/g)
    const everyValue = evalEveryInput[0] * timeUnits[evalEveryInput[1]]
    const forValue = evalForInput[0] * timeUnits[evalForInput[1]]

    if(format.test(eval_for_input.val())){
      save.prop('disabled', true)
      return toastr.error('Not allow symbol in input')
    } 

    if(evalForInput[0] < 1){
      save.prop('disabled', true)
      return toastr.error('All number should be positive integer')
    }
    
    if(!timeUnits[evalForInput[1]]){
      save.prop('disabled', true)
      return toastr.error(`Correct format should be 1s, 5m, 7h`)
    }

    if (forValue < everyValue){
      save.prop('disabled', true)
      return warning[0].classList.remove("d-none")
    } else {
      warning[0].classList.add("d-none")
    }
    save.prop('disabled', false)
  })
  
  sources.change( async () => {
    const sourceVal = sources.val()
    const response = await axios.post('/dashboards/type_instance',{ source: sourceVal })
    let option = ''
    for(let i = 0; i < response.data.length; i++) {
      option += `<option value="${response.data[i]}">${response.data[i]}</option>`
    }
    type.html(option)
  })

  const name = $('#name')
  name.change(() => {
    if(name.val().length > 60){
      toastr.error('Max length of name is 60 characters')
      save.prop('disabled', true)
      return
    }
    save.prop('disabled', false)
  })

  const message = $('#message')
  message.change(() => {
    if(message.val().length > 256){
      toastr.error('Max length of message is 256 characters')
      save.prop('disabled', true)
      return
    }
    save.prop('disabled', false)
  })
</script>