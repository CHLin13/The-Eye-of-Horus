<body class="hold-transition sidebar-mini">
<div class="wrapper">
  <!-- Navbar -->
  <nav class="main-header navbar navbar-expand navbar-dark">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
      </li>
    </ul>
  </nav>
  <!-- /.navbar -->

  <!-- Main Sidebar Container -->
  <aside class="main-sidebar sidebar-dark-primary elevation-4">
    <!-- Brand Logo -->
    <a href="/" class="brand-link">
      <img src="https://i.imgur.com/euLn4Te.png" alt=" Logo" class="brand-image img-circle elevation-3" style="opacity: .8">
      <span class="brand-text font-weight-light">The Eye of Horus</span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">
      <!-- Sidebar Menu -->
      <nav class="mt-2">
        <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
          <!-- Add icons to the links using the .nav-icon class
               with font-awesome or any other icon font library -->
          <li class="nav-item">
            <a href="/dashboards" class="nav-link">
              <i class="nav-icon fas fa-tachometer-alt"></i>
              <p>
                Dashboard
              </p>
            </a>
          </li>
          <li class="nav-item" >
            <a href="/alerts" class="nav-link select">
              <i class="nav-icon fas fa-bell"></i>
              <p>
                Alert
              </p>
            </a>
          </li>
          <li class="nav-item">
            <a href="/profile" class="nav-link">
              <i class="nav-icon fa fa-user"></i>
              <p>
                Profile
              </p>
            </a>
          </li>
          <li class="nav-item">
            <a href="/admin/users" class="nav-link">
              <i class="nav-icon fa fa-users"></i>
              <p>
                Users
              </p>
            </a>
          </li>
          <li class="nav-item">
            <a href="/admin/roles" class="nav-link">
              <i class="nav-icon fa fa-user-tag"></i>
              <p>
                Roles
              </p>
            </a>
          </li>
        </ul>
      </nav>
      <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
  </aside>

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper bg-dark">
    <!-- Main content -->
    <section class="content">
      <div class="container-fluid">
        <form action="/alerts/create" method="post">
          <div class="row">
            <div class="col-12 mt-2 mb-5">
              <div class="d-flex justify-content-between mr-5 mb-3">
                  <div class="d-flex ml-5 pl-3">
                    <label for="name" class="d-flex justify-content-center align-items-center m-0 mr-3">Name</label>
                    <input class="form-control" type="text" id="name" placeholder="Name"style="background: #343A40; color:white" required>
                  </div>
                  <div class="d-flex mx-5">
                    <label for="time-range" class="d-flex justify-content-center align-items-center m-0 mr-3">Time range</label>
                    <select class="form-control" id="time-range" style="width: 15vw; background: #343A40; color:white">
                      <option value="5-m">Last 5 minutes</option>
                      <option value="15-m">Last 15 minutes</option>
                      <option value="30-m">Last 30 minutes</option>
                      <option value="1-h">Last 1 hour</option>
                      <option value="3-h">Last 3 hour</option>
                      <option value="6-h">Last 6 hour</option>
                      <option value="12-h">Last 12 hour</option>
                      <option value="24-h">Last 24 hour</option>
                      <option value="2-d">Last 2 days</option>
                      <option value="7-d">Last 7 days</option>
                      <option value="30-d">Last 30 days</option>
                      <option value="90-d">Last 90 days</option>
                      <option value="6-M">Last 6 months</option>
                      <option value="1-y">Last 1 year</option>
                      <option value="2-y">Last 2 years</option>
                      <option value="5-y">Last 5 years</option>
                    </select>
                  <button type="submit" class="btn mr-3 ml-5" style="background-color: #8C745E; color:#C2C7D0">SAVE</button>
                  </div>
                  
              </div>
              <div class="card m-auto" style="width: 90%; background: #343A40">
                <!-- /.card-header -->
                <div class="card-body table-responsive p-1 d-flex justify-content-center" style="height: 50vh;">
                  <div class="chart"></div>
                </div>
                <!-- /.card-body -->
              </div>
              <div class="d-flex mt-3 mr-5 ml-3 justify-content-around">
                <div class="d-flex">
                  <label for="source" class="d-flex justify-content-center align-items-center m-0 mx-5" style="width:3vw">Source</label>
                  <select class="form-control ml-4" id="source" style="width: 15vw; background: #343A40; color:white" name="source">              
                    {{#if data}}
                      {{#each source}}
                      <option value="{{this}}" {{#ifCond this ../data.source }}selected{{/ifCond}}>{{this}}</option>
                      {{/each}}
                    {{else}}
                      {{#each source}}
                      <option value="{{this}}">{{this}}</option>
                      {{/each}}
                    {{/if}}
                  </select>
                </div>
                <div class="d-flex mr-5" style="width: 33vw;">
                  <label for="type" class="d-flex justify-content-center align-items-center m-0 mx-3" style="width:10vw">Type instance</label>
                  <select class="form-control ml-4" id="type" style="width: 10vw; background: #343A40; color:white" name="type">
                    {{#if data}}
                      {{#each type}}
                        <option value="{{this}}" {{#ifCond this ../data.type }}selected{{/ifCond}}>{{this}}</option>
                      {{/each}}
                    {{/if}}
                  </select>
                </div>
                <div>
                  <div class="btn mr-2" style="background-color:#59573C; color:#C2C7D0" id="preview">Preview chart</div>
                </div>
              </div>
              <div class="d-flex justify-content-around mr-5">
                <div class="d-flex mt-3 ml-3">
                  <label for="style" class="d-flex justify-content-center align-items-center m-0 mx-5" style="width:3vw">Style</label>
                  <select class="form-control ml-4" id="style" style="width: 15vw; background: #343A40; color:white">
                    <option value="line">line chart</option>
                    <option value="bar">bar chart</option>
                  </select>
                </div>
                <div class="d-flex mt-3 ml-3">
                  <label for="interval" class="d-flex justify-content-center align-items-center m-0 mx-5" style="width:3vw">Interval</label>
                  <input class="form-control" type="number" min="1" style="width: 75px; background: #343A40; color:white" id="interval" value="10">
                  <select class="form-control ml-2" style="width: 8vw; background: #343A40; color:white" id="interval_unit">
                    <option value="s">second</option>
                    <option value="m">minute</option>
                    <option value="h">hour</option>
                    <option value="d">day</option>
                    <option value="w">week</option>
                  </select>
                </div>
                <div class="d-flex mr-5" style="width: 20vw;">
                </div>
              </div>
              <div class="d-flex mr-5">
                <div class="d-flex mt-3" style="margin-left: 2vw;">
                  <label for="select" class="d-flex justify-content-center align-items-center m-0 ml-5 mr-3" style="width:3vw">When</label>
                  <select class="form-control" id="select" style="width: 10vw; background: #343A40; color:white;" name="select" id="select">
                    <option value="min">min</option>
                    <option value="max">max</option>
                    <option value="mean">mean</option>
                    <option value="sum">sum</option>
                    <option value="count">count</option>
                  </select>
                </div>
                <div class="d-flex mt-3 ml-2">
                  <select class="form-control" id="condition" style="width: 13vw; background: #343A40; color:white;" name="condition">
                    <option value="1">GREATER THAN  ">"</option>
                    <option value="2">LESS THAN  "<"</option>
                    <option value="3">IS OUTSIDE</option>
                    <option value="4">IS BETWEEN</option>
                    <option value="5">HAS NO VALUE</option>
                  </select>
                </div>
                <div id="value">
                <div class="d-flex mt-3 ml-2" >
                  <input class="form-control" type="number" style="width: 75px; background: #343A40; color:white" name="value">
                </div>
                </div>
                <div class="d-none" >
                  <div class="d-flex mt-3">
                    <label for="value_max" class="d-flex justify-content-center align-items-center m-0 mx-1" style="width:3vw">TO</label>
                    <input class="form-control" type="number" style="width: 75px; background: #343A40; color:white" id="value_max" name="value_max">
                  </div>
                </div>
              </div>
              <div class="d-flex mr-5">
                <div class="d-flex mt-3" style="margin-left: 2vw;">
                  <label for="eval_every_input" class="d-flex justify-content-center align-items-center m-0 ml-4 mr-3" style="width:10vw">Evaluate every</label>
                  <select class="form-control" id="eval_every_input" style="width: 8vw; background: #343A40; color:white;" name="eval_every_input">
                    <option value="1m">1m</option>
                    <option value="5m">5m</option>
                    <option value="10m">10m</option>
                    <option value="30m">30m</option>
                    <option value="1h">1h</option>
                    <option value="3h">3h</option>
                    <option value="5h">6h</option>
                    <option value="12h">12h</option>
                    <option value="18h">18h</option>
                    <option value="1d">1d</option>
                    <option value="3d">3d</option>
                    <option value="1w">1w</option>
                    <option value="1M">1M</option>
                    <option value="3M">3M</option>
                    <option value="6M">6M</option>
                    <option value="1y">1y</option>
                    <option value="2y">2y</option>
                  </select>
                </div>
                <div class="d-flex mt-3">
                  <div class="d-flex justify-content-center align-items-center m-0 ml-4 mr-3" style="width:3vw;">for</div>
                </div>
                <div class="d-flex mt-3 ml-2">
                  <input class="form-control" type="text" style="width: 75px; background: #343A40; color:white" name="eval_for_input" id="eval_for_input" value="5m">
                </div>
              </div>
              <div class="p-3 d-none" style="margin: 3vh 5vw 0 5vw; background-color:#4b535a; color:#bec4ca" id="warning"><i class="fas fa-exclamation-triangle text-warning mr-3"></i>Setting a "for" duration that is less than or equal to the evaluation interval will result in the evaluation interval being used to calculate when an alert that has stopped receiving data will be closed.</div>
              <div class="d-flex mr-5">
                <div class="d-flex mt-3">
                  <label for="receiver_id" class="d-flex justify-content-center align-items-center m-0" style="width:15vw">Receiver</label>
                    <select class="form-control" id="receiver_id" style="width: 8vw; background: #343A40; color:white;" name="receiver_id">
                    {{#each receiver}}
                      <option value="{{this.id}}">{{this.title}}</option>
                    {{/each}}
                  </select>
                </div>
              </div>
              <div class="d-flex mr-5">
                <div class="d-flex mt-3" style="margin-left: 2vw;">
                  <label for="eval-every-input" class="d-flex justify-content-center align-items-center m-0 ml-4 mr-3" style="width:15vw">Alert message</label>
                  <textarea class="form-control" name="message" id="message" cols="30" rows="10" style="background-color:#4b535a; color:#bec4ca"></textarea>
                </div>
              </div>
            </div>
          </div>
        </form>
      </div>
    </section>
    <!-- /.content -->
  </div>
  <!-- /.content-wrapper -->
  <footer class="main-footer bg-dark">
    <strong>Copyright &copy; 2022 &nbsp;</strong> All rights reserved.
  </footer>
</div>
<!-- ./wrapper -->
</body>
<script>
  $('#preview').on('click', async (e) => {
    const response = await axios.post('/dashboards/chart/preview',{ 
        timeRange: $('#time-range').val(),
        source: $('#source').val(),
        type: $('#type').val(),
        style: '',
        interval: $('#interval').val(),
        interval_unit: $('#interval_unit').val(),
        select: $('#select').val()
      });

    const chart = $('.chart')[0]
    const result = response.data.data
    const select = response.data.select + '_value'

    const trace = {
      x: result.map(item => item.time),
      y: result.map(item => item[select]),
      type: $('#style').val(),
      connectgaps: true
    }

    var layout = {
      title:$('#title').val(),
      titlefont: { size: $('#font-size').val(), color: '#FFF' },
        xaxis: {
          tickfont: { color: '#FFF'  }
        },
        yaxis: {
          tickfont: { color: '#FFF' }
        }, 
      paper_bgcolor: 'rgb(52,58,64)',
      plot_bgcolor: 'rgba(0,0,0,0)',
      legend: { font: { color: '#FFF' } },
    };

    Plotly.newPlot(chart, [trace], layout);
    })

  $('#condition').change((e) => {
    if (e.currentTarget.value === '3' || e.currentTarget.value === '4'){
      e.currentTarget.parentElement.parentElement.lastElementChild.classList.remove("d-none")
      $('#value')[0].classList.remove('d-none')
    } else if (e.currentTarget.value === '5') {
      console.log($('#value')[0])
      $('#value')[0].classList.add('d-none')
      e.currentTarget.parentElement.parentElement.lastElementChild.classList.add("d-none")
    } else {
      e.currentTarget.parentElement.parentElement.lastElementChild.classList.add("d-none")
      $('#value')[0].classList.remove('d-none')
    }
  })

  const timeUnits = {
  's': 1,
  'm': 60,
  'h': 60 * 60,
  'd': 24 * 60 * 60,
  'M': 30 * 24 * 60 * 60,
  'y': 365 * 30 * 24 * 60 * 60,
  }

    $('#eval-every-input').change((e) => {
    const evalEveryInput = $('#eval-every-input').val().match(/[a-zA-Z]+|[0-9]+/g)
    const evalForInput = $('#eval-for-input').val().match(/[a-zA-Z]+|[0-9]+/g)
    const everyValue = evalEveryInput[0] * timeUnits[evalEveryInput[1]]
    const forValue = evalForInput[0] * timeUnits[evalForInput[1]]
    if (forValue < everyValue){
      $('#warning')[0].classList.remove("d-none")
    } else {
      $('#warning')[0].classList.add("d-none")
    }
  })

  $('#eval-for-input').change((e) => {
    console.log('for')
    const evalEveryInput = $('#eval-every-input').val().match(/[a-zA-Z]+|[0-9]+/g)
    const evalForInput = $('#eval-for-input').val().match(/[a-zA-Z]+|[0-9]+/g)
    const everyValue = evalEveryInput[0] * timeUnits[evalEveryInput[1]]
    const forValue = evalForInput[0] * timeUnits[evalForInput[1]]
    if (forValue < everyValue){
      $('#warning')[0].classList.remove("d-none")
    } else {
      $('#warning')[0].classList.add("d-none")
    }
  })
  
  $('#source').change( async () => {
    const source = $('#source').val()
    const response = await axios.post('/dashboards/type_instance',{ source: source })
    let option = ''
    for(let i = 0; i < response.data.length; i++) {
      option += `<option value="${response.data[i]}">${response.data[i]}</option>`
    }
    $('#type').html(option)
  })
</script>